/* ************************** NOTES ******************************
1. Margin Overlap
	CSS margins OVERLAP with each other to give the greatest margin. for eg.
	If top div has margin-bottom : 10px and bottom div has margin-top : 15px; ..
	The final margin won't be 25 pixel but 15 pixel (the greatest of two - 10px is overlapped and only 5 extra is added)
2. Removing small whitespace between inline-block elements
	By putting the end tag and starting tag of 2 distinct elements we want to be inline-block, in the same line in html
		for eg. </div><div> -- Here the two divs are not in 2 separate lines
	By putting HTML comment that extends the two starting lines between the 2 above divs 
3. Absolute vs Relative
	They are abducted from normal flow and their places is occupied by other elements if they are moved. Enable top,bottom,left and right
	Absolute positioning ALWAYS starts from EXTREME ENDS of browser if it's outmost element.
	!!! HOWEVER if it's OUTER CONTAINER has position:relative, it starts at the extreme end of its outer container
	Relative positioning starts RELATIVE to ORIGINAL POSITION it would be IF IT WASN'T MOVED. POSITION 0 0 IS ITS OWN POSITION. 
4. Text-align:center; aligns text inside the box while margin: 0 auto; align boxes in center within a box */

#book p {			/* selects all <p> tag elements that are comes after/are inside the element with id 'book' */
	color : red;	/* there is no limit, you can go to any depth (line 22) */
}

#book, p {
	color : blue;	/* this however selects the element with id 'book' and all elements with tag <p> */
}

section p {	
	color : red;
	background-color: blue;
}

section > p {	/* this is applied ONLY to the DIRECT first child (first p) contained within the first element (here section) */
	color: blue; 
	font-size: 10px;
}

section ~ p {	/* brothers of section (all p's that are in the same level as section) (NOT CHILD <p>) */
	border: 2px;
}

#book h2 + p {	/* brother that is just after h2 (only the very next). h2 and p have same parent thats #book here */
	padding: 2px;
}

/* <a href="google.com" target_blank> Google opens in same page </a> */
a[target] {	/* selecting by attribute 'target' */
	background: red;
}

a[href = "google.com"] {	/* selecting by value */
	background: blue;
}

a[href *= "twitter"] {	/* all href containing the word twitter */
	border: 1px;
}

a[href ^= "http://"] {	/* all links starting with ... */
	color: red;
}

a[href $= ".pdf"] {	/* links ending with extension...*/
	background-image: url("images/pdf.ico");	/* you can assign special icons for the links */
}

a:hover {
	font-size: 15px;
}

input:checked {
	color: red;
}

#book: first-child, last-child {
	color: red;
}

#divwith1child: only-child {
	color: rgb(12,221,23);
}

p:first-of-type, a:last-of-type {	/* the first <p> type and last <a> type tag */
	font-size: 50px;
}

ul > li:nth-child(5n) {	/* all li child items which are multiples of 5 */
	background: red;
}
